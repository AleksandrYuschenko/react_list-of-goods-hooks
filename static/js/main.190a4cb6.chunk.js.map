{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","reorderList","goods","visibleGoods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","classNames","map","el","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,oEAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KA4BA,IAKMC,EA/BN,SACEC,GAGA,IAAMC,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKT,EAASiB,QACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKhB,EAASmB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITd,GACFO,EAAaQ,UAKRR,EAQWS,CAClBrB,GAGF,OACE,sBAAKsB,UAAU,MAAf,WACInB,GACA,wBACEoB,KAAK,SACLC,QAAS,kBAAMpB,GAAcD,IAF/B,mBAQDA,GACC,qCACE,wBACEmB,UACEG,IAAW,SACT,CAAE,iBAAkBjB,IAAaT,EAASiB,UAE9CO,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASiB,UANtC,iCAUA,wBACEM,UACEG,IAAW,SACT,CAAE,iBAAkBjB,IAAaT,EAASmB,SAE9CK,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASmB,SANtC,4BAUA,wBACEI,UACEG,IAAW,SACT,CAAE,iBAAkBpB,IAExBkB,KAAK,SACLC,QAAS,kBAAMlB,GAAeD,IANhC,qBAUA,wBACEiB,UAAU,SACVC,KAAK,SACLC,QAAS,kBAtDjBlB,GAAc,QACdG,EAAYV,EAASQ,OAkDf,mBAOA,oBAAIe,UAAU,QAAd,SACGZ,EAAYgB,KAAI,SAAAC,GAAE,OACjB,oBAAIL,UAAU,cAAd,SACGK,gBClHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.190a4cb6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  function getReorderedGoods(\n    goods: string[],\n  ) {\n    // Not to mutate the original array\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n    // Sort and reverse goods if needed\n    // ...\n\n    return visibleGoods;\n  }\n\n  const setReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const reorderList = getReorderedGoods(\n    goodsFromServer,\n  );\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          onClick={() => setIsStarted(!isStarted)}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <button\n            className={\n              classNames('button',\n                { 'button--active': sortType === SortType.ALPABET })\n            }\n            type=\"button\"\n            onClick={() => setSortType(SortType.ALPABET)}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            className={\n              classNames('button',\n                { 'button--active': sortType === SortType.LENGTH })\n            }\n            type=\"button\"\n            onClick={() => setSortType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n          <button\n            className={\n              classNames('button',\n                { 'button--active': isReversed })\n            }\n            type=\"button\"\n            onClick={() => setIsReversed(!isReversed)}\n          >\n            Reverse\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setReset()}\n          >\n            Reset\n          </button>\n          <ul className=\"Goods\">\n            {reorderList.map(el => (\n              <li className=\"Goods__item\">\n                {el}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}