{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStarted","isReversed","setReversed","NONE","sortType","setSortType","isReset","setReset","reorderList","goods","visibleGoods","x","y","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","el","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BP,oBAAS,GAArC,mBAAOQ,EAAP,KAAgBC,EAAhB,KAmCA,IAAMC,EAjCN,SACEC,GAGA,IAAMC,EAAY,YAAOD,GACrBE,EAAIV,EACJW,EAAIR,EAwBR,OAtBIE,IACFK,GAAI,EACJC,EAAIjB,EAASQ,MAGfO,EAAaG,MAAK,SAACC,EAAGC,GACpB,OAAQH,GACN,KAAKjB,EAASqB,QACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKpB,EAASuB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITR,GACFD,EAAaU,UAKRV,EAGWW,CAClBzB,GAGF,OACE,sBAAK0B,UAAU,MAAf,WACIvB,GACA,wBACEwB,KAAK,SACLC,QAAS,kBAAMxB,GAAYD,IAF7B,mBAQDA,GACC,qCACE,wBACEuB,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMnB,EAAYV,EAASqB,UAHtC,iCAOA,wBACEM,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMnB,EAAYV,EAASuB,SAHtC,4BAOA,wBACEI,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMtB,GAAaD,IAH9B,qBAOA,wBACEqB,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMjB,GAAUD,IAH3B,mBAOA,oBAAIgB,UAAU,QAAd,SACGd,EAAYiB,KAAI,SAAAC,GAAE,OACjB,oBAAIJ,UAAU,cAAd,SACGI,gBC3GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b2228586.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setStarted] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReset, setReset] = useState(false);\n\n  function getReorderedGoods(\n    goods: string[],\n  ) {\n    // Not to mutate the original array\n    const visibleGoods = [...goods];\n    let x = isReversed;\n    let y = sortType;\n\n    if (isReset) {\n      x = false;\n      y = SortType.NONE;\n    }\n\n    visibleGoods.sort((a, b) => {\n      switch (y) {\n        case SortType.ALPABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (x) {\n      visibleGoods.reverse();\n    }\n    // Sort and reverse goods if needed\n    // ...\n\n    return visibleGoods;\n  }\n\n  const reorderList = getReorderedGoods(\n    goodsFromServer,\n  );\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          onClick={() => setStarted(!isStarted)}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setSortType(SortType.ALPABET)}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setSortType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setReversed(!isReversed)}\n          >\n            Reverse\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setReset(!isReset)}\n          >\n            Reset\n          </button>\n          <ul className=\"Goods\">\n            {reorderList.map(el => (\n              <li className=\"Goods__item\">\n                {el}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}