{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","selectOption","Array","fill","map","_","i","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","filterLength","setFilterLength","reorderList","goods","visibleGoods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","filter","el","className","type","onClick","classNames","title","name","id","value","onChange","ev","target","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,oEAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAML,IAAME,EAAe,IAAIC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAEhDC,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAST,EAASc,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCP,mBAAS,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KA6BA,IAKMC,EAhCN,SACEC,GAGA,IAAMC,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQT,GACN,KAAKf,EAASyB,QACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKxB,EAAS2B,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAIThB,GACFS,EAAaQ,UAMRR,EAQWS,CAClB7B,GACA8B,QAAO,SAAAC,GAAE,OAAIA,EAAGJ,QAAUX,KAE5B,OACE,sBAAKgB,UAAU,MAAf,WACIvB,GACA,wBACEwB,KAAK,SACLC,QAAS,kBAAMxB,GAAcD,IAF/B,mBAQDA,GACC,qCACE,wBACEuB,UACEG,IAAW,SACT,CAAE,iBAAkBrB,IAAaf,EAASyB,UAE9CS,KAAK,SACLC,QAAS,kBAAMnB,EAAYhB,EAASyB,UANtC,iCAUA,wBACEQ,UACEG,IAAW,SACT,CAAE,iBAAkBrB,IAAaf,EAAS2B,SAE9CO,KAAK,SACLC,QAAS,kBAAMnB,EAAYhB,EAAS2B,SANtC,4BAUA,wBACEM,UACEG,IAAW,SACT,CAAE,iBAAkBxB,IAExBsB,KAAK,SACLC,QAAS,kBAAMtB,GAAeD,IANhC,qBAUA,wBACEqB,UAAU,SACVC,KAAK,SACLC,QAAS,kBAtDjBtB,GAAc,QACdG,EAAYhB,EAASc,OAkDf,mBAQA,yBACEuB,MAAM,WACNC,KAAK,SACLC,GAAG,SACHC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAQxB,GAAiBwB,EAAGC,OAAOH,QAL/C,UAOE,wBAAQA,MAAO,EAAf,gBAIEtC,EAAaG,KAAI,SAAA2B,GAAE,OACjB,wBAAQQ,MAAOR,EAAf,SACGA,GADqBA,SAM9B,oBAAIC,UAAU,QAAd,SACGd,EAAYd,KAAI,SAAA2B,GAAE,OACjB,oBAAIC,UAAU,cAAd,SACGD,GAD8BA,eCxI/CY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d9979a94.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nconst selectOption = new Array(10).fill(0).map((_, i) => i + 1);\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [filterLength, setFilterLength] = useState(0);\n\n  function getReorderedGoods(\n    goods: string[],\n  ) {\n    // Not to mutate the original array\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    // Sort and reverse goods if needed\n    // ...\n\n    return visibleGoods;\n  }\n\n  const setReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const reorderList = getReorderedGoods(\n    goodsFromServer,\n  ).filter(el => el.length >= filterLength);\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <button\n          type=\"button\"\n          onClick={() => setIsStarted(!isStarted)}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <>\n          <button\n            className={\n              classNames('button',\n                { 'button--active': sortType === SortType.ALPABET })\n            }\n            type=\"button\"\n            onClick={() => setSortType(SortType.ALPABET)}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            className={\n              classNames('button',\n                { 'button--active': sortType === SortType.LENGTH })\n            }\n            type=\"button\"\n            onClick={() => setSortType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n          <button\n            className={\n              classNames('button',\n                { 'button--active': isReversed })\n            }\n            type=\"button\"\n            onClick={() => setIsReversed(!isReversed)}\n          >\n            Reverse\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setReset()}\n          >\n            Reset\n          </button>\n\n          <select\n            title=\"selector\"\n            name=\"select\"\n            id=\"select\"\n            value={filterLength}\n            onChange={(ev) => setFilterLength(+ev.target.value)}\n          >\n            <option value={0}>\n              --\n            </option>\n            {\n              selectOption.map(el => (\n                <option value={el} key={el}>\n                  {el}\n                </option>\n              ))\n            }\n          </select>\n          <ul className=\"Goods\">\n            {reorderList.map(el => (\n              <li className=\"Goods__item\" key={el}>\n                {el}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}